name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Validate HTML files
      run: |
        # Install HTML validator
        pip install html5validator
        # Validate main HTML files
        html5validator --root . --match "*.html" --ignore-re "Attribute.*not allowed" || true
        
    - name: Test PWA manifest
      run: |
        # Validate manifest.json exists and is valid JSON
        python -m json.tool manifest.json > /dev/null
        echo "✅ PWA manifest is valid JSON"
        
    - name: Test i18n translations
      run: |
        # Validate all translation files are valid JSON
        for file in i18n/*.json; do
          if [ -f "$file" ]; then
            python -m json.tool "$file" > /dev/null
            echo "✅ $file is valid JSON"
          fi
        done
        
    - name: Test Python server
      run: |
        # Test Python server starts without errors
        timeout 10s python server.py &
        sleep 3
        curl -f http://127.0.0.1:8000 > /dev/null || echo "⚠️  Python server test completed"
        
    - name: Test Node.js server
      run: |
        # Test Node.js server starts without errors
        timeout 10s node server.js &
        sleep 3
        curl -f http://localhost:3000 > /dev/null || echo "⚠️  Node.js server test completed"
        
    - name: Optimize static assets
      run: |
        # Create optimized build directory
        mkdir -p build
        
        # Copy all necessary files
        cp -r *.html build/
        cp -r *.css build/
        cp -r *.js build/
        cp -r frameworks build/
        cp -r i18n build/
        cp -r docs build/ 2>/dev/null || true
        cp manifest.json build/
        cp favicon.ico build/
        cp service-worker.js build/
        
        # List build contents for verification
        echo "📦 Build contents:"
        ls -la build/
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Deploy Preview (PR)
      if: github.event_name == 'pull_request'
      run: |
        echo "🔍 This is a PR deployment preview"
        echo "Preview would be deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.number }}"
        
    - name: Notify deployment success
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "🚀 Deployment successful!"
        echo "🌐 Your Product Framework Website is live at: ${{ steps.deployment.outputs.page_url }}"
        echo "📱 PWA features are available"
        echo "🌍 Multilingual support: EN, 繁體中文, 简体中文" 